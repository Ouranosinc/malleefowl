[buildout]

develop = .

# buildout options
show-picked-versions = true
newest = false
download-cache = downloads
versions = versions

## extensions

# use python site-packages
# https://pypi.python.org/pypi/buildout.locallib/ 
extensions = buildout.locallib

parts = 
    conda
    tomcat
    thredds
    malleefowl
    pywps
    ipython
    nose
    docker

extends = 
    config/postgres.cfg
    config/adagucserver.cfg
      
[settings]
hostname = localhost
output-port = 8090
http-port = 8091
tomcat-port = 8080
proxy-enabled = false
phoenix = true
archive-root = 
log-level = INFO

[versions]
#zc.buildout = 2.2.5

[conda]
recipe = birdhousebuilder.recipe.conda
pkgs = 
     python
     setuptools
     pywps
     owslib
     dateutil
     lxml
     netcdf4
     pyyaml
     yaml
     pyopenssl
     concurrentloghandler
     ipython
     nose
     esgf-pyclient
     dispel4py
     
[tomcat]
recipe = birdhousebuilder.recipe.tomcat

[thredds]  
recipe = birdhousebuilder.recipe.thredds
data_root = ${buildout:anaconda-home}/var/lib/pywps/outputs

[malleefowl]
recipe = zc.recipe.egg
eggs =
     malleefowl
interpreter = python

[pywps]
recipe = birdhousebuilder.recipe.pywps
sites = malleefowl
hostname = ${settings:hostname}
port = ${settings:http-port}
output_port = ${settings:output-port}
proxyEnabled = ${settings:proxy-enabled}
phoenix = ${settings:phoenix}

# pywps options
processesPath = ${buildout:directory}/malleefowl/processes
title = Malleefowl
abstract = Malleefowl Processes (esgf, workflow, publish, security, ...)
logLevel = ${settings:log-level}

# malleefowl options
thredds_url = http://${settings:hostname}:${settings:tomcat-port}/thredds
# default 1 day, in secs, 0 means for ever
timeout = 86400
# mako cache
mako_cache = ${buildout:anaconda-home}/var/cache/mako
# archive_root: comma seperated list of file archive root folders
archive_root = ${settings:archive-root}

[ipython]
recipe = zc.recipe.egg
eggs =
    ipython
    ${malleefowl:eggs}
entry-points =
   ipython=IPython:start_ipython
scripts =
    ipython=ipython

[nose]
recipe = zc.recipe.egg
eggs =
    nose
    ${malleefowl:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests

[docker]
recipe = birdhousebuilder.recipe.docker
image-name = ubuntu
image-version = 14.04
maintainer = Malleefowl WPS Application





 


