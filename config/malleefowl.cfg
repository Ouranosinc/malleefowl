[buildout]

parts += 
    conda
    malleefowl
    malleefowl_wps
    tomcat
    thredds
    ipython
    nose


[conda]
recipe = birdhousebuilder.recipe.conda
channels = birdhouse
pkgs = 
     python
     setuptools
     pywps
     owslib
     dateutil
     lxml
     netcdf4
     pyyaml
     yaml
     pyopenssl
     esgf-pyclient
     myproxyclient
     dispel4py
     python-swiftclient
     threddsclient
     pysolr
     apache-tomcat
     thredds
     ipython
     nose

     
[malleefowl]
recipe = zc.recipe.egg
eggs =
     malleefowl
interpreter = python


[malleefowl_wps]
recipe = birdhousebuilder.recipe.pywps
sites = malleefowl
keywords = WPS, PyWPS, Birdhouse, Malleefowl, Python, ESGF, Swift
providerName = Birdhouse/Malleefowl
providerSite = http://malleefowl.readthedocs.org/en/latest/
hostname = ${settings:hostname}
http_port = ${settings:http-port}
https_port = ${settings:https-port}
output_port = ${settings:output-port}
user = ${settings:user}

# pywps options
processesPath = ${buildout:directory}/malleefowl/processes
title = Malleefowl
abstract = Malleefowl Processes (esgf, workflow, publish, security, ...)
logLevel = ${settings:log-level}

# malleefowl options
thredds_url = http://${settings:hostname}:${settings:tomcat-port}/thredds
# default 1 day, in secs, 0 means for ever
timeout = 86400
# esgf archive root: list of file archive root folders separated by ":" like PATH
# overwrites enivronment ESGF_ARCHIVE_ROOT
archive_root = ${settings:archive-root}


[tomcat]
recipe = birdhousebuilder.recipe.tomcat
http_port = ${settings:tomcat-port}
Xms = ${settings:tomcat-xms}
Xmx = ${settings:tomcat-xmx}
MaxPermSize = ${settings:tomcat-maxpermsize}


[thredds]  
recipe = birdhousebuilder.recipe.thredds
#data_root = ${buildout:anaconda-home}/var/lib/pywps/outputs


[ipython]
recipe = zc.recipe.egg
eggs =
    ipython
    ${malleefowl:eggs}
entry-points =
   ipython=IPython:start_ipython
scripts =
    ipython=ipython


[nose]
recipe = zc.recipe.egg
eggs =
    nose
    ${malleefowl:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests





 


