[buildout]

parts += 
   malleefowl_redhat
   malleefowl
   malleefowl_outputs
#   malleefowl_testdata
   malleefowl_ipython
   malleefowl_nose

[malleefowl_redhat]
recipe = collective.recipe.cmd
on_install = true
cmds =
    if [ -f /etc/redhat-release ] ; then
      sudo yum install -y openssl-devel
    fi

[malleefowl]
recipe = z3c.recipe.scripts
eggs =
     Malleefowl
     pywps
     OWSLib
     ConcurrentLogHandler
     netCDF4
     PyYAML
     cdo
     c3meta
     basemap
     pymongo
#     PyRods
     icclim
     ocgis
     bokeh

[malleefowl_outputs]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    mkdir -p ${pywps_config:output_path}
    mkdir -p ${pywps_config:temp_path}
    sudo mkdir -p ${pywps_config:cache_path}
    sudo mkdir -p ${pywps_config:files_path}


[malleefowl_testdata]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    cp ${buildout:directory}/examples/test*.nc ${pywps_config:files_path}
    cp ${buildout:directory}/examples/*-wf.json ${pywps_config:files_path}

[malleefowl_ipython]
recipe = z3c.recipe.scripts
eggs =
    ipython
    ${malleefowl:eggs}
    ${PyWPS:eggs}
entry-points =
   ipython=IPython:start_ipython
scripts =
    ipython=ipython
initialization =
    import os
    os.environ['GDAL_DATA'] = '${env:gdal_data}'

[malleefowl_nose]
recipe = z3c.recipe.scripts
eggs =
    nose
    ${malleefowl:eggs}
    ${PyWPS:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests
initialization =
    import os
    os.environ['GDAL_DATA'] = '${env:gdal_data}'
    os.environ['PYWPS_CFG'] = '${pywps_config:output}'


