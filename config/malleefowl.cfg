[buildout]

parts += 
   malleefowl_conda
   malleefowl
   malleefowl_config
   malleefowl_gunicorn
   malleefowl_supervisor
   malleefowl_nginx
   malleefowl_ipython
   malleefowl_nose

[malleefowl_conda]
recipe = birdhousebuilder.recipe.conda
pkgs = 
     python
     setuptools
     pywps
     owslib
     dateutil
     lxml
     netcdf4
     pyyaml
     yaml
     pymongo
     pyopenssl=0.13.1
     restflow
     concurrentloghandler
     ipython
     nose
     gunicorn

[malleefowl]
recipe = z3c.recipe.scripts
eggs =
     Malleefowl
interpreter = python

[malleefowl_config]  
recipe = collective.recipe.template
input = ${buildout:directory}/templates/pywps.cfg
output = ${buildout:anaconda-home}/etc/pywps.cfg

processes_path = ${buildout:directory}/processes

[malleefowl_gunicorn]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/gunicorn.conf.py
output = ${buildout:anaconda-home}/etc/gunicorn.conf.py

bind = unix://${buildout:anaconda-home}/var/run/pywps.socket

[malleefowl_supervisor]
recipe = birdhousebuilder.recipe.supervisor

program = pywps
command = ${buildout:bin-directory}/python ${buildout:anaconda-home}/bin/gunicorn malleefowl.wsgiwps:application -c ${buildout:anaconda-home}/etc/gunicorn.conf.py


[malleefowl_nginx]
recipe = birdhousebuilder.recipe.nginx
input = ${buildout:directory}/templates/nginx-malleefowl.conf
sites = malleefowl

socket = ${buildout:anaconda-home}/var/run/pywps.socket
http = ${ports:http}
output_path = ${buildout:anaconda-home}/var/lib/pywps/outputs
files_path = ${buildout:anaconda-home}/var/lib/pywps/files

[malleefowl_ipython]
recipe = z3c.recipe.scripts
eggs =
    ipython
    ${malleefowl:eggs}
entry-points =
   ipython=IPython:start_ipython
scripts =
    ipython=ipython
initialization =
    import os
    os.environ['GDAL_DATA'] = '${env:gdal_data}'

[malleefowl_nose]
recipe = z3c.recipe.scripts
eggs =
    nose
    ${malleefowl:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests
initialization =
    import os
    os.environ['GDAL_DATA'] = '${env:gdal_data}'
    os.environ['PYWPS_CFG'] = '${malleefowl_config:output}'


