- id: CollectSources
  type: GroovyActor
  properties:
    initialize: |
      sourceList = []
    step: |
      sourceList.add(source)
      if (sourceList.size() <  max) {
        _status.setOutputEnable('sources', false)
      } else {
        sources = sourceList
        _status.setOutputEnable('sources', true)
      }
    inputs:
      max:
        default: 1
      source:
        type: String
    outputs:
      sources:
        type: Collection
    state:
      sourceList:

- id: WpsExecute
  type: GroovyActor
  properties:
    step: |
      tempFile = File.createTempFile('wps-result-', '.json', new File('.'))
      outfile = tempFile.absolutePath
      cmd = ['wpsclient', 'execute', 
                    '-s', service,
                    '-i', identifier,
                    '-o', outfile,
                    '--sleep', 5]
      if (verbose) {
          cmd.add('-v')
      }
      for (item in sources) {
          cmd.add('--input')
          cmd.add('' + complex_input + '=' + item.value)
      }
      for (item in input) {
          cmd.add('--input')
          cmd.add('' + item.value)
      }
      for (item in output) {
          cmd.add('--output')
          cmd.add('' + item.value)
      }
     
      proc = cmd.execute()
      proc.waitFor()

      result = identifier + ' ... failed'
      status = 'ProcessFailed'

      import org.yaml.snakeyaml.Yaml
      resultFile = new File(outfile)
      if (resultFile.exists()) {
         yaml = new Yaml()
         wpsResult = yaml.load(new FileInputStream(resultFile))
         result = wpsResult.processOutputs[0].reference
         statusLocation = wpsResult.statusLocation
         status = wpsResult.status
      }
    inputs:
      identifier: 
      service:
      complex_input:
      input:
        type: Collection
        optional: true
        nullable: true
      output:
        type: Collection
        optional: true
        nullable: true
      sources:
        type: Collection
        optional: true
        nullable: true
      verbose:
        type: Bool
    outputs:
      result:
      statusLocation:
      status:

