imports:

- classpath:/common/directors.yaml
- classpath:/common/groovy/actors.yaml

components:

# actors

<%include file="wpsActors.yaml"/>
<%include file="utilActors.yaml"/>

# workflow

- id: SimpleWorkflow
  type: Workflow
  properties:
    director: !ref MTDataDrivenDirector
    nodes:
    - !ref GetSource
    - !ref WriteSourceStatusLocation
    - !ref WaitForSources
    - !ref RunWorker
    - !ref WriteWorkerStatusLocation
    - !ref WriteWorkerStatus

# source nodes

- id: GetSource
  type: Node
  properties:
    actor: !ref WpsExecute
    constants:
      service: ${nodes['source'].get('service')}
      identifier: ${nodes['source'].get('identifier')}
      input: ${nodes['source'].get('input')}
      complex_input: ${nodes['source'].get('complex_input')}
      output: ${nodes['source'].get('output', 'output')}
      verbose: false
    sequences:
      sources: ${nodes['source'].get('sources')}
    outflows:
      result: /source/
      statusLocation: /statusLocation/source/
      status: /status/source/

- id: WriteSourceStatusLocation
  type: Node
  properties:
    actor: !ref FileWriterAppend
    constants:
      filename: restflow_source_status_location.txt
    inflows:
      message: /statusLocation/source/

- id: WriteSourceStatus
  type: Node
  properties:
    actor: !ref FileWriterAppend
    constants:
      filename: restflow_source_status.txt
    inflows:
      message: /status/source/

- id: WaitForSources
  type: Node
  properties:
    actor: !ref CollectSources
    constants:
      max: ${len(nodes['source'].get('sources'))}
    inflows:
      source: /source/
    outflows:
      sources: /sources/

# worker nodes

- id: RunWorker
  type: Node
  properties:
    actor: !ref WpsExecute
    constants:
      service: ${nodes['worker'].get('service')}
      identifier: ${nodes['worker'].get('identifier')}
      input: ${nodes['worker'].get('input')}
      complex_input: ${nodes['worker'].get('complex_input')}  
      verbose: false
    inflows:
      sources: /sources/
    outflows:
      result: /worker/
      statusLocation: /statusLocation/worker/
      status: /status/worker/
 
- id: WriteWorkerStatusLocation
  type: Node
  properties:
    actor: !ref FileWriterAppend
    constants:
      filename: restflow_worker_status_location.txt
    inflows:
      message: /statusLocation/worker/

- id: WriteWorkerStatus
  type: Node
  properties:
    actor: !ref FileWriterAppend
    constants:
      filename: restflow_worker_status.txt
    inflows:
      message: /status/worker/



